package dsl.Learnings.one.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.descriptor.EditorAspectDescriptor;
import java.util.Collection;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import java.util.Collections;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorComponent;
import jetbrains.mps.openapi.editor.descriptor.ConceptEditorHint;

public class EditorAspectDescriptorImpl implements EditorAspectDescriptor {
  public Collection<ConceptEditor> getEditors(ConceptDescriptor descriptor) {
    switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a, descriptor.getConceptFqName())) {
      case 0:
        return Collections.<ConceptEditor>singletonList(new Begin_Editor());
      case 1:
        return Collections.<ConceptEditor>singletonList(new CommandList_Editor());
      case 2:
        return Collections.<ConceptEditor>singletonList(new CommentLine_Editor());
      case 3:
        return Collections.<ConceptEditor>singletonList(new CommentLineSection_Editor());
      case 4:
        return Collections.<ConceptEditor>singletonList(new CommentLineSetQP_Editor());
      case 5:
        return Collections.<ConceptEditor>singletonList(new Difficulty_Editor());
      case 6:
        return Collections.<ConceptEditor>singletonList(new EmptyLine_Editor());
      case 7:
        return Collections.<ConceptEditor>singletonList(new EmptyLineSETQP_Editor());
      case 8:
        return Collections.<ConceptEditor>singletonList(new EmptyLineSection_Editor());
      case 9:
        return Collections.<ConceptEditor>singletonList(new EmptyLineType_Editor());
      case 10:
        return Collections.<ConceptEditor>singletonList(new Mark_Editor());
      case 11:
        return Collections.<ConceptEditor>singletonList(new QTYPE_Editor());
      case 12:
        return Collections.<ConceptEditor>singletonList(new RepeatQuestionPaper_Editor());
      case 13:
        return Collections.<ConceptEditor>singletonList(new RepeatSubject_Editor());
      case 14:
        return Collections.<ConceptEditor>singletonList(new RepeatType_Editor());
      case 15:
        return Collections.<ConceptEditor>singletonList(new Section_Editor());
      case 16:
        return Collections.<ConceptEditor>singletonList(new SectionBlock_Editor());
      case 17:
        return Collections.<ConceptEditor>singletonList(new SetQP_Editor());
      case 18:
        return Collections.<ConceptEditor>singletonList(new SetQPBlock_Editor());
      case 19:
        return Collections.<ConceptEditor>singletonList(new StringName_Editor());
      case 20:
        return Collections.<ConceptEditor>singletonList(new Subject_Editor());
      case 21:
        return Collections.<ConceptEditor>singletonList(new SubjectList_Editor());
      case 22:
        return Collections.<ConceptEditor>singletonList(new System_Specifics_Editor());
      case 23:
        return Collections.<ConceptEditor>singletonList(new TYPEBlock_Editor());
      case 24:
        return Collections.<ConceptEditor>singletonList(new TypeList_Editor());
      default:
    }
    return Collections.emptyList();
  }

  public Collection<ConceptEditorComponent> getEditorComponents(ConceptDescriptor descriptor, String editorComponentId) {
    return Collections.emptyList();
  }



  public Collection<ConceptEditorHint> getHints() {
    return Collections.emptyList();
  }


  private static String[] stringSwitchCases_xbvbvu_a0a0a = new String[]{"dsl.Learnings.one.structure.Begin", "dsl.Learnings.one.structure.CommandList", "dsl.Learnings.one.structure.CommentLine", "dsl.Learnings.one.structure.CommentLineSection", "dsl.Learnings.one.structure.CommentLineSetQP", "dsl.Learnings.one.structure.Difficulty", "dsl.Learnings.one.structure.EmptyLine", "dsl.Learnings.one.structure.EmptyLineSETQP", "dsl.Learnings.one.structure.EmptyLineSection", "dsl.Learnings.one.structure.EmptyLineType", "dsl.Learnings.one.structure.Mark", "dsl.Learnings.one.structure.QTYPE", "dsl.Learnings.one.structure.RepeatQuestionPaper", "dsl.Learnings.one.structure.RepeatSubject", "dsl.Learnings.one.structure.RepeatType", "dsl.Learnings.one.structure.Section", "dsl.Learnings.one.structure.SectionBlock", "dsl.Learnings.one.structure.SetQP", "dsl.Learnings.one.structure.SetQPBlock", "dsl.Learnings.one.structure.StringName", "dsl.Learnings.one.structure.Subject", "dsl.Learnings.one.structure.SubjectList", "dsl.Learnings.one.structure.System_Specifics", "dsl.Learnings.one.structure.TYPEBlock", "dsl.Learnings.one.structure.TypeList"};
}
