package dsl.Learnings.one.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import Library.newlib.QuestionBank;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public class Difficulty_Behavior {
  public static void init(SNode thisNode) {
  }

  public static List<String> call_getMenu_7751232820940420515(SNode thisNode, String type, String subject) {
    QuestionBank qb = new QuestionBank();
    String[] result = null;
    try {
      result = qb.showMenu(type, subject);

    } catch (Exception e) {
    }
    List<String> resList = ListSequence.fromList(new LinkedList<String>());
    for (int i = 0; i < result.length; i++) {
      ListSequence.fromList(resList).addElement(result[i]);
    }
    return resList;
  }

  public static List<String> call_getLoopMenu_4272570878830918522(SNode thisNode, List<String> type, List<String> sub) {
    QuestionBank qb = new QuestionBank();
    String[] temp = new String[ListSequence.fromList(type).count()];
    String[] temp1 = new String[ListSequence.fromList(sub).count()];

    for (int j = 0; j < ListSequence.fromList(type).count(); j++) {
      temp[j] = ListSequence.fromList(type).getElement(j).toString();
    }

    for (int j = 0; j < ListSequence.fromList(sub).count(); j++) {
      temp1[j] = ListSequence.fromList(sub).getElement(j).toString();
    }

    String[] result = null;
    try {
      result = qb.showLoopSubMenu(temp, temp1);
    } catch (Exception e) {
    }
    List<String> resList = ListSequence.fromList(new LinkedList<String>());
    for (int i = 0; i < result.length; i++) {
      ListSequence.fromList(resList).addElement(result[i]);
    }
    return resList;
  }
}
