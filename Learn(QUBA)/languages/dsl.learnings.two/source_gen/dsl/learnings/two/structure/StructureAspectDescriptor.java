package dsl.learnings.two.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b, conceptFqName)) {
      case 0:
        return new ConceptDescriptorBuilder("dsl.learnings.two.structure.Answer_intf").interface_().create();
      case 1:
        return new ConceptDescriptorBuilder("dsl.learnings.two.structure.DDL").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.execution.util.structure.IMainClass", "dsl.Learnings.one.structure.AbstractCommand_intf").children(new String[]{"body"}, new boolean[]{true}).alias("question bank login", "").create();
      case 2:
        return new ConceptDescriptorBuilder("dsl.learnings.two.structure.DDLBLOCK_intf").interface_().create();
      case 3:
        return new ConceptDescriptorBuilder("dsl.learnings.two.structure.Delete").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "dsl.learnings.two.structure.DDLBLOCK_intf").properties("question_number").alias("remove question", "").create();
      case 4:
        return new ConceptDescriptorBuilder("dsl.learnings.two.structure.EmptyLine").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "dsl.learnings.two.structure.DDLBLOCK_intf").create();
      case 5:
        return new ConceptDescriptorBuilder("dsl.learnings.two.structure.Image").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "dsl.learnings.two.structure.InsertPicture_intf").create();
      case 6:
        return new ConceptDescriptorBuilder("dsl.learnings.two.structure.Insert").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "dsl.learnings.two.structure.DDLBLOCK_intf").properties("type", "Question", "Subject", "Difficulty").children(new String[]{"Answer", "images"}, new boolean[]{false, false}).alias("create question", "").create();
      case 7:
        return new ConceptDescriptorBuilder("dsl.learnings.two.structure.InsertPicture_intf").interface_().properties("basepath", "picture").create();
      case 8:
        return new ConceptDescriptorBuilder("dsl.learnings.two.structure.MultipleChoiceAnswer").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "dsl.learnings.two.structure.Answer_intf").properties("no_of_choices", "optional_choices", "answerString").children(new String[]{"choice_list"}, new boolean[]{true}).create();
      case 9:
        return new ConceptDescriptorBuilder("dsl.learnings.two.structure.Report").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "dsl.learnings.two.structure.DDLBLOCK_intf").properties("list1", "list2", "list3").alias("show report", "").create();
      case 10:
        return new ConceptDescriptorBuilder("dsl.learnings.two.structure.SearchBy").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "dsl.learnings.two.structure.DDLBLOCK_intf").properties("context", "value", "count").alias("search by category", "").create();
      case 11:
        return new ConceptDescriptorBuilder("dsl.learnings.two.structure.SubjectReference").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"subject"}, new boolean[]{false}).create();
      case 12:
        return new ConceptDescriptorBuilder("dsl.learnings.two.structure.Update").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "dsl.learnings.two.structure.DDLBLOCK_intf").properties("question_number", "set_field", "set_value").alias("modify question", "").create();
      case 13:
        return new ConceptDescriptorBuilder("dsl.learnings.two.structure.ViewAll").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "dsl.learnings.two.structure.DDLBLOCK_intf").create();
      case 14:
        return new ConceptDescriptorBuilder("dsl.learnings.two.structure.WordAnswer").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "dsl.learnings.two.structure.Answer_intf").properties("answerString").alias("Word", "").create();
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }

  private static String[] stringSwitchCases_1htk8d_a0a0b = new String[]{"dsl.learnings.two.structure.Answer_intf", "dsl.learnings.two.structure.DDL", "dsl.learnings.two.structure.DDLBLOCK_intf", "dsl.learnings.two.structure.Delete", "dsl.learnings.two.structure.EmptyLine", "dsl.learnings.two.structure.Image", "dsl.learnings.two.structure.Insert", "dsl.learnings.two.structure.InsertPicture_intf", "dsl.learnings.two.structure.MultipleChoiceAnswer", "dsl.learnings.two.structure.Report", "dsl.learnings.two.structure.SearchBy", "dsl.learnings.two.structure.SubjectReference", "dsl.learnings.two.structure.Update", "dsl.learnings.two.structure.ViewAll", "dsl.learnings.two.structure.WordAnswer"};
}
