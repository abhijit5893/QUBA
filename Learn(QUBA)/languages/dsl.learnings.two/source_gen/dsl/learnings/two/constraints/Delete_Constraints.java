package dsl.learnings.two.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.IScope;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;
import dsl.learnings.two.behavior.Delete_Behavior;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class Delete_Constraints extends BaseConstraintsDescriptor {
  public Delete_Constraints() {
    super("dsl.learnings.two.structure.Delete");
  }

  @Override
  protected Map<String, PropertyConstraintsDescriptor> getNotDefaultProperties() {
    Map<String, PropertyConstraintsDescriptor> properties = new HashMap();
    properties.put("question_number", new BasePropertyConstraintsDescriptor("question_number", this) {
      @Override
      public boolean hasOwnValidator() {
        return true;
      }

      @Override
      public boolean validateValue(SNode node, String propertyValue, IScope scope) {
        String propertyName = "question_number";
        {
          List<String> valid_list = ListSequence.fromList(new LinkedList<String>());
          valid_list = Delete_Behavior.call_getQuestionNumberMenu_2334151094745465414(node);
          for (int i = 0; i < ListSequence.fromList(valid_list).count(); i++) {
            if ((SPropertyOperations.getInteger(propertyValue)) == Integer.parseInt(ListSequence.fromList(valid_list).getElement(i))) {
              return true;
            }
          }
          return false;
        }
      }
    });
    return properties;
  }
}
