package QPManifest.editor;

/*Generated by MPS */

import jetbrains.mps.nodeEditor.DefaultNodeEditor;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import jetbrains.mps.openapi.editor.EditorContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.nodeEditor.cells.EditorCell_Collection;
import jetbrains.mps.nodeEditor.cells.EditorCell_Constant;
import jetbrains.mps.openapi.editor.style.Style;
import jetbrains.mps.editor.runtime.style.StyleImpl;
import jetbrains.mps.editor.runtime.style.StyleAttributes;
import jetbrains.mps.nodeEditor.cellProviders.CellProviderWithRole;
import jetbrains.mps.lang.editor.cellProviders.PropertyCellProvider;
import jetbrains.mps.nodeEditor.cellMenu.CompositeSubstituteInfo;
import jetbrains.mps.nodeEditor.cellMenu.SubstituteInfoPartExt;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.nodeEditor.EditorManager;
import jetbrains.mps.lang.editor.generator.internal.AbstractCellMenuPart_PropertyValues;
import java.util.List;
import jetbrains.mps.smodel.IScope;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;
import QPManifest.behavior.EditManifest_Behavior;

public class EditManifest_Editor extends DefaultNodeEditor {
  public EditorCell createEditorCell(EditorContext editorContext, SNode node) {
    return this.createCollection_93qpl5_a(editorContext, node);
  }

  private EditorCell createCollection_93qpl5_a(EditorContext editorContext, SNode node) {
    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);
    editorCell.setCellId("Collection_93qpl5_a");
    editorCell.setBig(true);
    editorCell.addEditorCell(this.createConstant_93qpl5_a0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_93qpl5_b0(editorContext, node));
    editorCell.addEditorCell(this.createProperty_93qpl5_c0(editorContext, node));
    editorCell.addEditorCell(this.createConstant_93qpl5_d0(editorContext, node));
    editorCell.addEditorCell(this.createProperty_93qpl5_e0(editorContext, node));
    return editorCell;
  }

  private EditorCell createConstant_93qpl5_a0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "Edit Manifest");
    editorCell.setCellId("Constant_93qpl5_a0");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createConstant_93qpl5_b0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "set field :");
    editorCell.setCellId("Constant_93qpl5_b0");
    Style style = new StyleImpl();
    style.set(StyleAttributes.INDENT_LAYOUT_ON_NEW_LINE, true);
    style.set(StyleAttributes.INDENT_LAYOUT_INDENT, true);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createProperty_93qpl5_c0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("field");
    provider.setNoTargetText("<no field>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_field");
    editorCell.setSubstituteInfo(new CompositeSubstituteInfo(editorContext, provider.getCellContext(), new SubstituteInfoPartExt[]{new EditManifest_Editor.EditManifest_field_cellMenu_93qpl5_a0c0()}));
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  public static class EditManifest_field_cellMenu_93qpl5_a0c0 extends AbstractCellMenuPart_PropertyValues {
    public EditManifest_field_cellMenu_93qpl5_a0c0() {
    }

    public List<String> getPropertyValues(SNode node, IScope scope, IOperationContext operationContext, EditorContext editorContext) {
      List<String> menu = ListSequence.fromList(new LinkedList<String>());
      ListSequence.fromList(menu).addElement("title");
      ListSequence.fromList(menu).addElement("subject");
      ListSequence.fromList(menu).addElement("keywords");
      ListSequence.fromList(menu).addElement("author");
      ListSequence.fromList(menu).addElement("creator");
      ListSequence.fromList(menu).addElement("examtype");
      ListSequence.fromList(menu).addElement("time");
      ListSequence.fromList(menu).addElement("maxmarks");
      ListSequence.fromList(menu).addElement("instructions");
      return menu;
    }
  }

  private EditorCell createConstant_93qpl5_d0(EditorContext editorContext, SNode node) {
    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, "set value :");
    editorCell.setCellId("Constant_93qpl5_d0");
    editorCell.setDefaultText("");
    return editorCell;
  }

  private EditorCell createProperty_93qpl5_e0(EditorContext editorContext, SNode node) {
    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);
    provider.setRole("value");
    provider.setNoTargetText("<no value>");
    EditorCell editorCell;
    editorCell = provider.createEditorCell(editorContext);
    editorCell.setCellId("property_value");
    editorCell.setSubstituteInfo(new CompositeSubstituteInfo(editorContext, provider.getCellContext(), new SubstituteInfoPartExt[]{new EditManifest_Editor.EditManifest_value_cellMenu_93qpl5_a0e0()}));
    SNode attributeConcept = provider.getRoleAttribute();
    Class attributeKind = provider.getRoleAttributeClass();
    if (attributeConcept != null) {
      IOperationContext opContext = editorContext.getOperationContext();
      EditorManager manager = EditorManager.getInstanceFromContext(opContext);
      return manager.createRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);
    } else
    return editorCell;
  }

  public static class EditManifest_value_cellMenu_93qpl5_a0e0 extends AbstractCellMenuPart_PropertyValues {
    public EditManifest_value_cellMenu_93qpl5_a0e0() {
    }

    public List<String> getPropertyValues(SNode node, IScope scope, IOperationContext operationContext, EditorContext editorContext) {
      return EditManifest_Behavior.call_pictures_6301226679266628135(node, EditManifest_Behavior.call_getbasepath_6301226679266628197(node));
    }
  }
}
