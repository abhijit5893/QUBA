package QPManifest.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b, conceptFqName)) {
      case 0:
        return new ConceptDescriptorBuilder("QPManifest.structure.EditManifest").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("dsl.Learnings.one.structure.AbstractCommand_intf", "jetbrains.mps.lang.core.structure.BaseConcept").properties("field", "value").create();
      case 1:
        return new ConceptDescriptorBuilder("QPManifest.structure.ViewManifest").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.execution.util.structure.IMainClass", "dsl.Learnings.one.structure.AbstractCommand_intf").properties("title", "subject", "keywords", "author", "institute", "exam_heading", "duration", "max_marks", "instructions").alias("view manifest", "").create();
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }

  private static String[] stringSwitchCases_1htk8d_a0a0b = new String[]{"QPManifest.structure.EditManifest", "QPManifest.structure.ViewManifest"};
}
